---
- hosts: all
  become: yes
  become_user: root

  tasks:
    - name: install packages bind
      yum:
        name: bind
        state: latest
      when: ansible_connection == 'local'

    - name: Edit nameserver listen IP Address
      lineinfile:
        path: /etc/named.conf
        regexp: "listen-on port 53 { 127.0.0.1; };"
        line: "       listen-on port 53 { 127.0.0.1; 192.168.100.11;};"
        backup: yes
      when: ansible_connection == 'local'

    - name: Edit allow-query
      lineinfile:
        path: /etc/named.conf
        regexp: "allow-query     { localhost; };"
        line: "       allow-query     { any; };"
        backup: yes
      when: ansible_connection == 'local'

    - name: Edit include
      lineinfile:
        path: /etc/named.conf
        line: 'include "/etc/named/named.conf.local";'
        backup: yes
      when: ansible_connection == 'local'

    - name: Change permision /etc/named
      file:
        path: /etc/named
        owner: root
        group: root
        mode: "0755"
      when: ansible_connection == 'local'

    - name: Create Zones directory in /etc/named
      file:
        path: /etc/named/zones
        state: directory
        mode: 0755
      when: ansible_connection == 'local'

    - name: Copy forward and revest zone file to /etc/named/zones
      template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - {
            source: "template/db.projectsa.com.j2",
            destination: "/etc/named/zones/db.projectsa.com",
          }
        - {
            source: "template/db.192.168.100.j2",
            destination: "/etc/named/zones/db.192.168.100",
          }
        - {
            source: "template/db.mysite.com.j2",
            destination: "/etc/named/zones/db.mysite.com",
          }
      when: ansible_connection == 'local'

    - name: Copy zone file to /etc/named
      template:
        src: template/named.conf.local.j2
        dest: /etc/named/named.conf.local
        owner: root
        group: root
        mode: "0755"
      when: ansible_connection == 'local'

    - name: Start Service
      service:
        name: named
        state: started
      when: ansible_connection == 'local'

    - name: yum install firewalld
      yum:
        name: firewalld
        state: latest
      when: ansible_connection == 'local'

    - name: Start firewalld
      service:
        name: firewalld
        state: started
      when: ansible_connection == 'local'

    - name: Start tcp and udp
      firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
      loop:
        - "53/udp"
        - "53/tcp"
      when: ansible_connection == 'local'

    - name: Restart firewall
      service:
        name: firewalld
        state: restarted
      when: ansible_connection == 'local'

    - name: Copy resolv.conf
      template:
        src: template/resolv.conf.j2
        dest: /etc/resolv.conf
        owner: root
        group: root
        mode: "0755"

    - name: Install Bind-Utils
      yum:
        name: bind-utils
        state: latest

- hosts: web
  become: yes
  become_user: root

  tasks:
    - name: Install remi repo
      yum:
        name: http://rpms.remirepo.net/enterprise/remi-release-7.rpm
        state: latest

    - name: Import remi repo
      rpm_key:
        key: http://rpms.remirepo.net/RPM-GPG-KEY-remi
        state: present

    - name: Install php And httpd
      yum:
        name:
          - httpd
          - php
          - php-cli
          - php-fpm
          - php-mysqlnd
          - php-zip
          - php-devel
          - php-gd
          - php-mcrypt
          - php-mbstring
          - php-curl
          - php-xml
          - php-pear
          - php-bcmath
          - php-json
        state: latest
        enablerepo: remi-php73

    - name: Edit timezone
      lineinfile:
        path: /etc/php.ini
        regexp: ";date.timezone"
        line: "date.timezone=Asia/Bangkok"
        backup: yes

    - name: Enable httpd
      service:
        name: httpd
        enabled: yes

    - name: Start httpd
      service:
        name: httpd
        state: started

    - name: Enable service firewall
      service:
        name: firewalld
        enabled: yes

    - name: Start firewall
      service:
        name: firewalld
        state: started

    - name: Open firewall
      firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
      loop:
        - "http"
        - "https"

    - name: Restart firewalld Service
      service:
        name: firewalld
        state: restarted

    - name: Copy index.php
      template:
        src: "template/index.php.j2"
        dest: "/var/www/html/index.php"
        owner: root
        group: root
        mode: 0755

    - name: create directory html
      file:
        path: /var/www/projectsa.com/html
        state: directory
        mode: 0755

    - name: create directory log
      file:
        path: /var/www/projectsa.com/log
        state: directory
        mode: 0755

    - name: create directory html at mysite
      file:
        path: /var/www/mysite.com/html
        state: directory
        mode: 0755

    - name: create directory log at mysite
      file:
        path: /var/www/mysite.com/log
        state: directory
        mode: 0755

    - name: chmod directory /var/www
      file:
        path: /var/www
        owner: root
        group: root
        mode: 0755

    - name: create file at /etc/httpd/conf.d projectsa
      template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - {
            source: "template/projectsa-01.com.conf.j2",
            destination: "/etc/httpd/conf.d/projectsa.com.conf",
          }
        - {
            source: "template/mysite-01.com.conf.j2",
            destination: "/etc/httpd/conf.d/mysite.com.conf",
          }
      when: ansible_ssh_host == 'server-02'

    - name: create file at /etc/httpd/conf.d mysite
      template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - {
            source: "template/projectsa-02.conf.j2",
            destination: "/etc/httpd/conf.d/projectsa.com.conf",
          }
        - {
            source: "template/mysite-02.com.conf.j2",
            destination: "/etc/httpd/conf.d/mysite.com.conf",
          }
      when: ansible_ssh_host == 'server-03'

    - name: copy index.php to /var/www
      template:
        src: template/index.php.j2
        dest: /var/www/html/index.php
        owner: root
        group: root
        mode: "0755"

    - name: Restart httpd
      service:
        name: httpd
        state: restarted

- hosts: db
  become: yes
  become_user: root

  tasks:
    - name: install packages nfs
      yum:
        name: nfs-utils
        state: latest
    - name: edit file exports
      lineinfile:
        path: /etc/exports
        line: "/var/nfs *(rw,sync,no_root_squash,no_all_squash)"
        backup: yes
    - name: create directory html
      file:
        path: /var/nfs
        owner: nfsnobody
        group: nfsnobody
        state: directory
        mode: 0755

    - name: Enable service
      service:
        name: "{{ item }}"
        enabled: yes
      loop:
        - "rpcbind"
        - "nfs-server"
        - "nfs-lock"
    - name: Start Service
      service:
        name: "{{ item }}"
        state: started
      loop:
        - "rpcbind"
        - "nfs-server"
        - "nfs-lock"

    - name: Enable service firewall
      firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
      loop:
        - "nfs"
        - "mountd"
        - "rpc-bind"

    - name: Start Service firewall
      service:
        name: firewalld
        state: restarted

- hosts: web
  become: yes
  become_user: root

  tasks:
    - name: install packages nfs
      yum:
        name: nfs-utils
        state: latest
    - name: create directory mount point
      file:
        path: /var/nfs/www
        state: directory
        mode: 0755

    - name: mount /var/nfs/www
      command: mount 192.168.100.70:/var/nfs /var/nfs/www

    - name: create directory html
      file:
        path: /var/nfs/www/projectsa.com/html
        state: directory
        mode: 0755

    - name: create directory log
      file:
        path: /var/nfs/www/projectsa.com/log
        state: directory
        mode: 0755

    - name: create directory html at mysite
      file:
        path: /var/nfs/www/mysite.com/html
        state: directory
        mode: 0755

    - name: create directory log at mysite
      file:
        path: /var/nfs/www/mysite.com/log
        state: directory
        mode: 0755

    - name: chmod directory /var/www
      file:
        path: /var/nfs/www
        owner: root
        group: root
        mode: 0755

    - name: create file at /etc/httpd/conf.d projectsa
      template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - {
            source: "template/projectsa-01.com.conf.j2",
            destination: "/etc/httpd/conf.d/projectsa.com.conf",
          }
        - {
            source: "template/vhost.mysite-01.com.conf.j2",
            destination: "/etc/httpd/conf.d/mysite.com.conf",
          }
      when: ansible_ssh_host == '192.168.100.81'

    - name: create file at /etc/httpd/conf.d mysite
      template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - {
            source: "template/projectsa-02.com.conf.j2",
            destination: "/etc/httpd/conf.d/projectsa.com.conf",
          }
        - {
            source: "template/vhost.mysite-02.com.conf.j2",
            destination: "/etc/httpd/conf.d/mysite.com.conf",
          }
      when: ansible_ssh_host == '192.168.100.82'

    - name: copy index.php to /var/www
      template:
        src: template/index.php.j2
        dest: /var/nfs/www/projectsa.com/html/index.php
        owner: nfsnobody
        group: nfsnobody
        mode: "0755"

    - name: copy index.php to /var/www
      template:
        src: template/index.php.j2
        dest: /var/nfs/www/mysite.com/html/index.php
        owner: nfsnobody
        group: nfsnobody
        mode: "0755"

    - name: Restart httpd
      service:
        name: httpd
        state: restarted

- hosts: lb
  become: yes
  become_user: root

  tasks:
    - name: install nginx
      yum:
        name: nginx
        state: latest
    - name: create directory html
      file:
        path: /etc/nginx/conf.d/mysite.conf
        state: touch
        mode: 0755

    - name: create file projectsa
      file:
        path: /etc/nginx/conf.d/projectsa.conf
        state: touch
        mode: 0755

    - name: Enable nginx
      service:
        name: nginx
        enabled: yes

    - name: start nginx
      service:
        name: nginx
        state: started

    - name: create file at /etc/httpd/conf.d mysite
      template:
        src: "{{ item.source }}"
        dest: "{{ item.destination }}"
        owner: root
        group: root
        mode: "0755"
      loop:
        - {
            source: "template/projectsa.conf.j2",
            destination: "/etc/nginx/conf.d/projectsa.conf",
          }
        - {
            source: "template/mysite.conf.j2",
            destination: "/etc/nginx/conf.d/mysite.conf",
          }

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

- hosts: all
  become: yes
  become_user: root

  tasks:
    - name: install rsyslog
      yum:
        name: rsyslog
        state: latest

    - name: enable rsyslog
      service:
        name: rsyslog
        enabled: yes

    - name: start rsyslog
      service:
        name: rsyslog
        state: started

    - name: Start tcp and udp
      firewalld:
        port: "80/tcp"
        permanent: yes
        state: enabled

    - name: Start tcp and udp
      firewalld:
        service: "http"
        permanent: yes
        state: enabled

    - name: create file at /etc/httpd/conf.d mysite
      template:
        src: "template/rsyslog.conf.j2"
        dest: "/etc/rsyslog.conf"
        owner: root
        group: root
        mode: "0755"
      when: ansible_connection == 'local'

    - name: restart rsyslog
      service:
        name: rsyslog
        state: restarted

    - name: Start tcp and udp
      firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
      loop:
        - "514/udp"
        - "514/tcp"

    - name: Edit nameserver listen IP Address
      lineinfile:
        path: /etc/rsyslog.conf
        line: "*.* @192.168.100.11:514"
        backup: yes

    - name: Start Service firewall
      service:
        name: firewalld
        state: restarted
